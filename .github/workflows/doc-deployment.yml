name: Build and Deploy Documents

on: [push, pull_request]

env:
  LANG: "en_US.UTF-8"
  LC_ALL: "en_US.UTF-8"
  HOMEBREW_DISPLAY_INSTALL_TIMES: "ON"
  HOMEBREW_NO_ANALYTICS: "ON"
  HOMEBREW_NO_AUTO_UPDATE: "ON"
  HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
  HOMEBREW_NO_GITHUB_API: "ON"
  HOMEBREW_NO_INSTALL_CLEANUP: "ON"
  PIP_DISABLE_PIP_VERSION_CHECK: "ON"
  PIP_NO_CLEAN: "ON"
  PIP_PREFER_BINARY: "ON"
  TZ: "UTC"

jobs:
  Build-API-Docs:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Full history to get tag and commit info
      - name: Install Dependencies
        run: |
          pip3 install --prefer-binary --no-clean --disable-pip-version-check --progress-bar off lxml fypp
          brew install -f --force-bottle --keep-tmp ford
          type -a ford
          ford --version
          gfortran --version
      - name: Build Docs
        run: |
          git fetch --all --tags
          ford -r $(git describe --always) --debug API-doc-FORD-file.md
          zip -vr API-docs.zip API-doc/ -x "*.DS_Store"
      - name: Upload Documentation
        uses: actions/upload-artifact@v2
        with:
          name: FORD-API-docs
          path: ./API-docs.zip
      - name: Broken Link Check
        uses: technote-space/broken-link-checker-action@v1
        with:
          TARGET: file://${{ github.workspace }}/API-doc/index.html
          RECURSIVE: true
          ASSIGNEES: ${{ github.actor }}
      - name: Deploy API Docs
        uses: peaceiris/gh-pages@v3
#        if: github.event_name == 'push' && ( startsWith( github.ref, 'refs/tags/' ) || github.ref == 'refs/heads/master' )
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: fortran-lang/stdlib-docs
          publish_dir: ./API-doc
          publish_branch: master
          allow_empty_commit: true
          force_orphan: false
          user_name: ${{ github.actor }}
          commit_message: "From https://github.com/${{ github.repository }}/commit/${{ github.sha }} ${{ github.ref }}"
