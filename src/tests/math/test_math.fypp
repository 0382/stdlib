! SPDX-Identifier: MIT
#:include "common.fypp"
#:set IR_KINDS_TYPES = INT_KINDS_TYPES + REAL_KINDS_TYPES

module test_math
    use stdlib_kinds, only: int8, int16, int32, int64, sp, dp, qp
    use stdlib_error, only : check
    use stdlib_math

    implicit none

contains

    #:for k1, t1 in IR_KINDS_TYPES
    subroutine test_clip_${k1}$(x, xmin, xmax, compare)
        ${t1}$, intent(in) :: x, xmin, xmax, compare

        call check(clip(x, xmin, xmax) == compare)
    
    end subroutine test_clip_${k1}$

    #:endfor
end module test_math


program tester
    use test_math
    implicit none

    ! test case format: (x, xmin, xmax, correct answer)
    ! valid case: xmin is not greater than xmax
    ! invalid case: xmin is greater than xmax
    #:set valid_cases = [ [('2_int8', '-2_int8', '5_int8', '2_int8'), ('127_int8', '-127_int8', '0_int8', '0_int8')], &
                        [('2_int16', '-2_int16', '5_int16', '2_int16'), ('32767_int16', '-32767_int16', '0_int16', '0_int16')], &
                        [('2_int32', '-2_int32', '5_int32', '2_int32'), ('-2147483647_int32', '0_int32', '2147483647_int32', '0_int32')], &
                        [('2_int64', '-2_int64', '5_int64', '2_int64'), ('-922337203_int64', '-10_int64', '25_int64', '-10_int64')], &
                        [('3.025_sp', '-5.77_sp', '3.025_sp', '3.025_sp'), ('0.0_sp', '-1578.025_sp', '-59.68_sp', '-59.68_sp')], &
                        [('3.025_dp', '-5.77_dp', '3.025_dp', '3.025_dp'), ('-7.0_dp', '0.059668_dp', '1.00268_dp', '0.059668_dp')], &
                        [('3.025_qp', '-5.77_qp', '3.025_qp', '3.025_qp'), ('-55891546.2_qp', '-8958133457.23_qp', '-689712245.23_qp', '-689712245.23_qp')] ]

    #:set invalid_cases = [ [('2_int8', '5_int8', '-2_int8', '5_int8'), ('127_int8', '0_int8', '-127_int8', '0_int8')], &
                        [('2_int16', '5_int16', '-2_int16', '5_int16'), ('32767_int16', '0_int16', '-32767_int16', '0_int16')], &
                        [('2_int32', '5_int32', '-2_int32', '5_int32'), ('-2147483647_int32', '2147483647_int32', '0_int32', '2147483647_int32')], &
                        [('2_int64', '5_int64', '-2_int64', '5_int64'), ('-922337203_int64', '25_int64', '-10_int64', '25_int64')], &
                        [('3.025_sp', '3.025_sp', '-5.77_sp', '3.025_sp'), ('0.0_sp', '-59.68_sp', '-1578.025_sp', '-59.68_sp')], &
                        [('3.025_dp', '3.025_dp', '-5.77_dp', '3.025_dp'), ('-7.0_dp', '1.00268_dp', '0.059668_dp', '1.00268_dp')], &
                        [('3.025_qp', '3.025_qp', '-5.77_qp', '3.025_qp'), ('-55891546.2_qp', '-689712245.23_qp', '-8958133457.23_qp', '-689712245.23_qp')] ]

    #:set checking_function = 0
    #:for k1, t1 in IR_KINDS_TYPES
    ! type: ${t1}$, kind: ${k1}$
        ! valid test cases
    #:for case in valid_cases[checking_function]
        call test_clip_${k1}$(${case[0]}$, ${case[1]}$, ${case[2]}$, ${case[3]}$)
    #:endfor
        ! invalid test cases
    #:for case in invalid_cases[checking_function]
        call test_clip_${k1}$(${case[0]}$, ${case[1]}$, ${case[2]}$, ${case[3]}$)
    #:endfor

    #:set checking_function = checking_function + 1
    #:endfor
end program tester
